{"version":3,"file":"js/170.77eba764.js","mappings":"0OACIA,EAAAA,EAAAA,IAMM,sBALFC,EAAAA,EAAAA,GAAwD,SAAjDC,KAAK,Q,qCAAiBC,EAAAC,MAAKC,GAAEC,YAAY,S,iBAAnBH,EAAAC,UAAK,SAClCH,EAAAA,EAAAA,GAAkE,SAA3DC,KAAK,W,qCAAoBC,EAAAI,UAASF,GAAEC,YAAY,Y,iBAAvBH,EAAAI,cAAS,SACzCN,EAAAA,EAAAA,GAAyE,SAAlEC,KAAK,W,qCAAoBC,EAAAK,UAASH,GAAEC,YAAY,mB,iBAAvBH,EAAAK,cAChCP,EAAAA,EAAAA,GAAuD,UAA9CQ,QAAKC,EAAA,KAAAA,EAAA,GAAAL,GAAEM,EAAAC,aAAY,uBAAkB,QAAS,KACvDC,EAAAA,EAAAA,IAAGV,EAAAW,QAAM,I,uBAOjB,GACIC,KAAM,SACNC,IAAAA,GACI,MAAO,CACHZ,MAAO,GACPG,UAAW,GACXC,UAAW,GACXM,OAAQ,GACRE,KAAM,GAEd,EACAC,QAAS,CACL,cAAML,GAiBF,GAfAM,KAAKJ,OAAS,GAEK,KAAfI,KAAKd,OACLc,KAAKJ,OAAOK,KAAK,2BAGE,KAAnBD,KAAKX,WACLW,KAAKJ,OAAOK,KAAK,6BAGjBD,KAAKX,YAAcW,KAAKV,WACxBU,KAAKJ,OAAOK,KAAK,gCAIhBD,KAAKJ,OAAOM,OAAQ,CACrB,MAAMC,EAAW,CACbjB,MAAOc,KAAKd,MACZkB,SAAUJ,KAAKX,iBAGbgB,EAAAA,EACDC,KAAK,cAAeH,GACpBI,MAAKC,IAGMR,KAAKF,KAAOU,EAASV,KAEpBO,EAAAA,EAAMI,SAASC,QAAQC,OAAO,iBAAmB,GAGlDC,aAAaC,WAAW,SAGxB,MAAMV,EAAW,CACbjB,MAAOc,KAAKd,MACZkB,SAAUJ,KAAKX,WAInBgB,EAAAA,EACKC,KAAK,oBAAqBH,GAC1BI,MAAKC,IAGF,MAAMM,EAAQN,EAASV,KAAKiB,WAG5Bf,KAAKgB,OAAOC,OAAO,WAAYH,GAG/BT,EAAAA,EAAMI,SAASC,QAAQC,OAAO,iBAAmB,SAAWG,EAG5DF,aAAaM,QAAQ,QAASJ,GAG9Bd,KAAKmB,QAAQlB,KAAK,IAAI,IAIzBmB,OAAMC,IACH,GAAIA,EAAMb,SACN,IAAK,MAAMc,KAAYD,EAAMb,SAASV,KAClCE,KAAKJ,OAAOK,KAAM,GAAEqB,MAAaD,EAAMb,SAASV,KAAKwB,WAGzDtB,KAAKJ,OAAOK,KAAK,0CAEjBsB,QAAQC,IAAIC,KAAKC,UAAUL,GAC/B,GACF,IAIjBD,OAAMC,IACH,GAAIA,EAAMb,SAAU,CAChB,IAAK,MAAMc,KAAYD,EAAMb,SAASV,KAClCE,KAAKJ,OAAOK,KAAM,GAAEqB,MAAaD,EAAMb,SAASV,KAAKwB,MAGzDC,QAAQC,IAAIC,KAAKC,UAAUL,EAAMb,SAASV,MAC9C,MAAWuB,EAAMM,UACb3B,KAAKJ,OAAOK,KAAK,0CAEjBsB,QAAQC,IAAIC,KAAKC,UAAUL,IAC/B,GAEZ,CACJ,I,QC/GR,MAAMO,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://uchim_vue/./src/views/RegisterView.vue","webpack://uchim_vue/./src/views/RegisterView.vue?1ec6"],"sourcesContent":["<template>\r\n    <div>\r\n        <input type=\"email\" v-model=\"email\" placeholder=\"email\">\r\n        <input type=\"password\" v-model=\"password1\" placeholder=\"password\">\r\n        <input type=\"password\" v-model=\"password2\" placeholder=\"repeat password\">\r\n        <button @click=\"register()\">Зарегистрироваться</button>\r\n        {{ errors }}\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'SignUp',\r\n    data() {\r\n        return {\r\n            email: '',\r\n            password1: '',\r\n            password2: '',\r\n            errors: [],\r\n            data: \"\",\r\n        }\r\n    },\r\n    methods: {\r\n        async register() {\r\n            // сперва я проверяю на фронте, что юзер всё заполнил\r\n            this.errors = []\r\n\r\n            if (this.email === '') {\r\n                this.errors.push('The username is missing')\r\n            }\r\n\r\n            if (this.password1 === '') {\r\n                this.errors.push('The password is too short')\r\n            }\r\n\r\n            if (this.password1 !== this.password2) {\r\n                this.errors.push('The passwords doesn\\'t match')\r\n            }\r\n\r\n            // если юзер всё заполнил, то пытаемся регаться\r\n            if (!this.errors.length) {\r\n                const formData = {\r\n                    email: this.email,\r\n                    password: this.password1\r\n                }\r\n\r\n                await axios\r\n                    .post(\"auth/users/\", formData)\r\n                    .then(response => {\r\n\r\n                        // если юзер успешно зареган, то мы оказываемся тут и логиним его\r\n                                this.data = response.data;\r\n                            // обнуляю дефолтный хэдер\r\n                                 axios.defaults.headers.common[\"Authorization\"] = \"\"\r\n\r\n                                // обнуляю localStorage\r\n                                localStorage.removeItem(\"token\")\r\n\r\n                                // формирую данные, которые отправлю на сервак (json'чик)\r\n                                const formData = {\r\n                                    email: this.email,\r\n                                    password: this.password1\r\n                                }\r\n\r\n                                // отправляю на сервак пост запрос\r\n                                axios\r\n                                    .post(\"auth/token/login/\", formData)\r\n                                    .then(response => {\r\n\r\n                                        // когда я получаю ответ, то извлекаю токен\r\n                                        const token = response.data.auth_token\r\n\r\n                                        // сохраняю его в localStorage (т.е. вызываю store/index.js/SetToken)\r\n                                        this.$store.commit('setToken', token)\r\n                                        \r\n                                        // ставлю дефолтный хэдер\r\n                                        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token\r\n\r\n                                        // сохраняю его в классический localStorage\r\n                                        localStorage.setItem(\"token\", token)\r\n\r\n                                        // перенаправляю его на главную страницу\r\n                                        this.$router.push('/')\r\n\r\n                                    })\r\n                                    // здесь обрабатываем ошибки (ну мало ли)\r\n                                    .catch(error => {\r\n                                        if (error.response) {\r\n                                            for (const property in error.response.data) {\r\n                                                this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                                            }\r\n                                        } else {\r\n                                            this.errors.push('Something went wrong. Please try again')\r\n                                            \r\n                                            console.log(JSON.stringify(error))\r\n                                        }\r\n                                    })\r\n\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response) {\r\n                            for (const property in error.response.data) {\r\n                                this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                            }\r\n\r\n                            console.log(JSON.stringify(error.response.data))\r\n                        } else if (error.message) {\r\n                            this.errors.push('Something went wrong. Please try again')\r\n                            \r\n                            console.log(JSON.stringify(error))\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import { render } from \"./RegisterView.vue?vue&type=template&id=a80cd626\"\nimport script from \"./RegisterView.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","_createElementVNode","type","$data","email","$event","placeholder","password1","password2","onClick","_cache","$options","register","_toDisplayString","errors","name","data","methods","this","push","length","formData","password","axios","post","then","response","defaults","headers","common","localStorage","removeItem","token","auth_token","$store","commit","setItem","$router","catch","error","property","console","log","JSON","stringify","message","__exports__","render"],"sourceRoot":""}